import numpy

# Связный граф — граф, содержащий ровно одну компоненту связности.
# Это означает, что между любой парой вершин этого графа существует как минимум один путь

# функция вычисления связности
def graph_connectivity(S):

     # матрица достижимости вычисляется по формуле
     # С = E + S + S^2 + S^3 + S^4 + ... + S^n
     # где n - количество вершин графа
     # E - единичная матрица (единицы по диагонале)

     n = S.shape[0]

     E = numpy.eye(n)

     С = E + S

     S_i = S # S^i
     for i in range(1, n):
          S_i = numpy.dot(S_i, S)
          С = С + S_i

     print('матрица достижимости')
     print(С) # показывает количество путей длины от 1 до 4 между вершинами орграфа

     elem_prod = numpy.prod(С)

     if elem_prod != 0:
          print('граф связный')
     else:
          print('граф не связный')



# матрица смежности S
S1 = numpy.array([
     [0, 1, 0, 0],
     [0, 0, 1, 0],
     [0, 0, 0, 1],
     [1, 0, 0, 0]])

S2 = numpy.array([
     [0, 1, 1, 0],
     [0, 0, 0, 0],
     [0, 1, 0, 1],
     [0, 0, 1, 0]])


graph_connectivity(S1)
graph_connectivity(S2)